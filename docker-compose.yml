#Uncomment port 5005 to enable debugging
version: '2.4'

networks:
    backend-network:
        driver: bridge

services:
  postgres-db-service:
    image: ${DB_IMAGE_VERSION:-postgres:16.1}
    container_name: postgres
    restart: unless-stopped
    ports:
      - ${DB_PORT:-5432}:5432
    environment:
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-0000}
    volumes:
      - ./backend/data:/docker-entrypoint-initdb.d
    networks:
      - backend-network


  income-service:
    container_name: income-service
    build: backend/income-service
    image: ${USER_SERVICE_IMAGE:-income-service}
    env_file:
      - ./backend/income-service/.env.${ENVIRONMENT:-dev}
    restart: unless-stopped
    ports:
      - ${INCOME_SERVICE_PORT:-8083}:8080
      - ${INCOME_SERVICE_DEBUG_PORT:-5008}:5005
    depends_on:
      - postgres-db-service
    networks:
      - backend-network
    healthcheck:
      test: curl --fail http://income-service:8080/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  outcome-service:
    container_name: outcome-service
    build: backend/outcome-service
    image: ${USER_SERVICE_IMAGE:-outcome-service}
    env_file:
      - ./backend/outcome-service/.env.${ENVIRONMENT:-dev}
    restart: unless-stopped
    ports:
      - ${OUTCOME_SERVICE_PORT:-8082}:8080
      - ${OUTCOME_SERVICE_DEBUG_PORT:-5007}:5005
    depends_on:
      - postgres-db-service
    networks:
      - backend-network
    healthcheck:
      test: curl --fail http://outcome-service:8082/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  user-service:
    container_name: user-service
    build: backend/user-service
    image: ${USER_SERVICE_IMAGE:-user-service}
    env_file:
    - ./backend/user-service/.env.${ENVIRONMENT:-dev}
    restart: unless-stopped
    ports:
      - ${USER_SERVICE_PORT:-8081}:8080
      - ${USER_SERVICE_DEBUG_PORT:-5006}:5005
    depends_on:
      - postgres-db-service
    networks:
        - backend-network
    healthcheck:
      test: curl --fail http://user-service:8080/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5


  umbrella-service:
    container_name: umbrella-service
    build: backend/umbrella-service
    image: ${UMBRELLA_IMAGE:-umbrella-service}
    env_file:
      - ./backend/umbrella-service/.env.${ENVIRONMENT:-dev}
    restart: unless-stopped
    ports:
      - ${UMBRELLA_PORT:-8080}:8080
      - ${UMBRELLA_DEBUG_PORT:-5005}:5005
    depends_on:
      - postgres-db-service
    networks:
      - backend-network
    healthcheck:
      test: curl --fail http://umbrella-service:8080/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    container_name: api-gateway
    build: backend/api-gateway
    image: ${API_GATEWAY_IMAGE:-api-gateway}
    restart: unless-stopped
    ports:
      - ${API_GATEWAY_PORT:-80}:8080
    networks:
      - backend-network
