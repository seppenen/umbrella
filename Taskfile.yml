version: '3'
vars:
  HOME_DIR: '${HOME}'
  INIT_DATA_DIR: '{{.HOME}}/Development/Java/umbrella/microservices/backend/data'
  UMBRELLA_SERVICE_DIR: '{{.HOME}}/Development/Java/umbrella/microservices/backend/umbrella-service'
  AUTH_SERVICE_DIR: '{{.HOME}}/Development/Java/umbrella/microservices/backend/auth-service'
  USER_SERVICE_DIR: '{{.HOME}}/Development/Java/umbrella/microservices/backend/user-service'
  GATEWAY_SERVICE_DIR: '{{.HOME}}/Development/Java/umbrella/microservices/backend/api-gateway'
  FRONT_END_DIR: '{{.HOME}}/Development/Java/umbrella/microservices/frontend/umbrella'

tasks:
  clean-docker:
    silent: true
    cmds:
      - echo "Stopping all running containers..."รท
      - docker ps -q | xargs -r docker stop || echo "No running containers found."
      - echo "Removing all stopped containers..."
      - docker ps -a -q | xargs -r docker rm || echo "No containers to remove."
      - echo "Removing all images..."
      - docker images -q | xargs -r docker rmi -f || echo "No images to remove."
  clean-build:
    silent: true
    cmds:
      - echo "Removing target directory in {{.TARGET_DIR}}"
      - rm -rf {{.TARGET_DIR}}
  build:
    silent: true
    cmds:
    - echo "Building in {{.BUILD_DIR}}"
    - cd {{.BUILD_DIR}} && mvn clean package -DskipTests

  empty-database:
    silent: true
    cmds:
      - echo "Removing all data from the database..."
      - docker rm -f postgres && docker-compose up -d postgres

  create-database:
    silent: true
    cmds:
      - echo "Creating new DB"
      - docker-compose up -d postgres

  redeploy-frontend:
    cmds:
      - |
        echo "Starting task for {{.SERVICE}}"
        echo "Stopping {{.SERVICE}} service container..."
        docker stop {{.SERVICE}} || echo "No {{.SERVICE}} running container found."
        echo "Removing {{.SERVICE}} service container..."
        docker rm {{.SERVICE}} || echo "No {{.SERVICE}} container to remove."
        echo "Removing {{.SERVICE}} service image..."
        docker rmi {{.SERVICE}} || echo "No {{.SERVICE}} image to remove."
        echo "Building in frontend/{{.SERVICE}} directory"
        cd frontend/{{.SERVICE}} && npm install && npm run build
        echo "Creating new {{.SERVICE}} service container..."
        docker-compose up -d {{.SERVICE}}
    silent: true

  redeploy-backend:
    cmds:
      - |
        echo "Starting task for {{.SERVICE}}"
        echo "Stopping {{.SERVICE}} service container..."
        docker stop {{.SERVICE}} || echo "No {{.SERVICE}} running container found."
        echo "Removing {{.SERVICE}} service container..."
        docker rm {{.SERVICE}} || echo "No {{.SERVICE}} container to remove."
        echo "Removing {{.SERVICE}} service image..."
        docker rmi {{.SERVICE}} || echo "No {{.SERVICE}} image to remove."
        echo "Building in backend/{{.SERVICE}} directory"
        cd backend/{{.SERVICE}} && mvn clean package -DskipTests
        echo "Creating new {{.SERVICE}} service container..."
        docker-compose up -d {{.SERVICE}}
    silent: true

  build-all:
    silent: true
    cmds:
      - task: clean-docker
      - task: build
        vars: { BUILD_DIR: '{{.UMBRELLA_SERVICE_DIR}}' }
      - task: build
        vars: { BUILD_DIR: '{{.USER_SERVICE_DIR}}' }
      - task: build
        vars: { BUILD_DIR: '{{.AUTH_SERVICE_DIR}}' }
      - task: build
        vars: { BUILD_DIR: '{{.GATEWAY_SERVICE_DIR}}' }
      - task: create-database
      - docker-compose up -d


  up:
    cmds:
      - task: build-all


  default:
    cmds:
      - |
        echo "Usage: 
          task up - Performs all the clean, build and setup tasks.
          task redeploy-backend - Redeploy backend service
          task clean-docker - Stops and removes all Docker containers and images. 
          task empty-database - Removes all data. 
          task create-database - Create new db."
  

